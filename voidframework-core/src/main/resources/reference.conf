voidframework {

    # Core configuration
    core {

        # Specifies if the application run in development mode
        runInDevMode = false

        # Defines the locations to scan for classes to bind (converter, service, module, ...)
        # It is also possible to define "paths" to be excluded. Be careful with this last option,
        # however, as it can make the scan result uncertain.
        acceptedScanPaths += "dev.voidframework.core.conversion.converter"
        rejectedScanPaths += "dev.voidframework.core.VoidApplication"

        # Defines interfaces for which to bind all found implementations.
        bindExtraInterfaces += ""

        # Discovered modules are enabled by default. This parameter allows you to define which
        # modules should not be loaded when the application is started.
        disabledModules += ""

        # Defines the direct injection more strict. If set to "true", direct injection will only
        # works with bind classes. In the other hand, if set to "false", direct injection will
        # works with any classes. Note, however, that direct injection of a collection will always
        # require the elements of that list to be bind.
        requireExplicitBindings = true
    }
}
