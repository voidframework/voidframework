voidframework {

    # Core configuration
    core {

        acceptedScanPaths += "dev.voidframework.web.module"
        acceptedScanPaths += "dev.voidframework.web.http.errorhandler"
        acceptedScanPaths += "dev.voidframework.web.http.filter"
        acceptedScanPaths += "dev.voidframework.web.server"
        acceptedScanPaths += "dev.voidframework.web.filter"

        # Defines interfaces for which to bind all found implementations.
        bindExtraInterfaces += "dev.voidframework.web.http.filter.Filter"
        bindExtraInterfaces += "dev.voidframework.web.server.ExtraWebServerConfiguration"
    }

    # Configuration of "web" module
    web {

        # Specifies the time (in milliseconds) for the daemon to shut down properly.
        gracefulStopTimeout = 15000

        # Implementation of the error handler to use
        errorHandler = "dev.voidframework.web.http.errorhandler.DefaultErrorHandler"

        # The locations of the routing configuration classes (including class name)
        # Allow manual route declaration. Use it with caution!
        #routes += ""

        # The locations of the global filter classes (including class name)
        #globalFilters += ""

        # The default location of static files
        baseAssetResourcesDirectory = "static"

        # Language
        language {

            # Available languages
            availableLanguages = ["en", "fr"]

            # Name of the cookie containing the current language
            cookieName = "VOID_LANG"

            # Is the cookie only be accessed via HTTP?
            cookieHttpOnly = false

            # Is the cookie secured? If true, sent only for HTTPS requests
            cookieSecure = false
        }

        # Flash messages
        flashMessages {

            # Name of the cookie containing the current session
            cookieName = "VOID_FLASH"

            # Is the cookie only be accessed via HTTP?
            cookieHttpOnly = true

            # Is the cookie secured? If true, sent only for HTTPS requests
            cookieSecure = false
        }

        # Session
        session {

            # Name of the cookie containing the current session
            cookieName = "VOID_SESS"

            # Is the cookie only be accessed via HTTP?
            cookieHttpOnly = true

            # Is the cookie secured? If true, sent only for HTTPS requests
            cookieSecure = false

            # Signature key is used to secure the session content
            signatureKey = "changeme"

            # Defines the session TTL. According to the documentation, the
            # following units can be used :
            #  - s, seconds
            #  - m, minutes
            #  - h, hours
            #  - d, days
            #
            # ie: timeToLive = "7 days"
            timeToLive = "7 days"
        }

        # Security headers
        securityHeaders {

            # Defines the value for the header "X-Content-Type-Options".
            # If set to null, the header will no be added.
            contentTypeOptions = "nosniff"

            # Defines the value for the header "X-Frame-Options".
            # If set to null, the header will no be added.
            frameOptions = "DENY"

            # Defines the value for the header "X-XSS-Protection".
            # If set to null, the header will no be added.
            xssProtection = "1; mode=block"

            # Defines the value for the header "Cross-Origin-Resource-Policy".
            # If set to null, the header will no be added.
            crossOriginResourcePolicy = "same-origin"

            # Defines the value for the header "Content-Security-Policy".
            # If set to null, the header will no be added
            contentSecurityPolicy = "default-src 'self'"
        }

        # Cross-Site Request Forgery
        csrf {

            # The token name
            tokenName = "csrfToken"

            # Name of the cookie containing the current CSRF token
            cookieName = "VOID_CSRF"

            # Is the cookie only be accessed via HTTP?
            cookieHttpOnly = false

            # Is the CSRF cookie secured? If true, sent only for HTTPS requests
            cookieSecure = ${voidframework.web.session.cookieSecure}

            # Signature key is used to secure the CSRF token
            signatureKey = ${voidframework.web.session.signatureKey}

            # Defines the time to live (TTL) of a single CSRF Token
            # The following units can be used :
            #  - s, seconds
            #  - m, minutes
            #  - h, hours
            #  - d, days
            #
            # ie: timeToLive = "15 minutes"
            timeToLive = "15 minutes"
        }

        # Server configuration
        server {

            # The interface on which the server will listen
            listenHost = "127.0.0.1"

            # The port on which the server will listen
            listenPort = 9000

            # Defines the implementation of the interface "ExtraWebServerConfiguration"
            # to apply a custom configuration to the Undertow web server
            extraWebServerConfiguration = null

            # Defines the number of I/O threads. If not specified (value = 0 or null), the
            # following default value will be used:
            # ioThreadsNumber = Math.max(Runtime.getRuntime().availableProcessors(), 2)
            ioThreads = null

            # Defines the number of Worker threads. If not specified (value = 0 or null), the
            # following default value will be used:
            # workerThreadsNumber = ioThreadsNumber * 8
            workerThreads = null

            # Specifies the max body content size. According to the documentation, the
            # following units can be used :
            #   - K, k, Ki, KiB, kibibyte, kibibytes
            #   - M, m, Mi, MiB, mebibyte, mebibytes
            #   - G, g, Gi, GiB, gibibyte, gibibytes
            #
            # ie: timeToLive = "1 MiB"
            maxBodySize = "1 MiB"

            # Specifies the maximum size allowed in memory before the uploaded file was stored
            # on the disk rather than in memoryt. According to the documentation, the
            # following units can be used :
            #   - K, k, Ki, KiB, kibibyte, kibibytes
            #   - M, m, Mi, MiB, mebibyte, mebibytes
            #   - G, g, Gi, GiB, gibibyte, gibibytes
            #
            # ie: fileSizeThreshold = "256 KiB"
            fileSizeThreshold = "256 KiB"
        }
    }
}
