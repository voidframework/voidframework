voidframework {

    # Core configuration
    core {

        acceptedScanPaths += "dev.voidframework.web.module"
        acceptedScanPaths += "dev.voidframework.web.http.impl"
        acceptedScanPaths += "dev.voidframework.web.server"

        # Defines interfaces for which to bind all found implementations.
        bindExtraInterfaces += "dev.voidframework.web.filter.Filter"
    }

    # Configuration of "web" module
    web {

        # Specifies the time (in milliseconds) for the daemon to shut down properly.
        gracefulStopTimeout = 15000

        # Specifies the max body content size. According to the documentation, the
        # following units can be used :
        #   - K, k, Ki, KiB, kibibyte, kibibytes
        #   - M, m, Mi, MiB, mebibyte, mebibytes
        #   - G, g, Gi, GiB, gibibyte, gibibytes
        #
        # ie: timeToLive = "1 MiB"
        maxBodySize = "1 MiB"

        # Specifies the maximum size allowed in memory before the uploaded file was stored
        # on the disk rather than in memoryt. According to the documentation, the
        # following units can be used :
        #   - K, k, Ki, KiB, kibibyte, kibibytes
        #   - M, m, Mi, MiB, mebibyte, mebibytes
        #   - G, g, Gi, GiB, gibibyte, gibibytes
        #
        # ie: fileSizeThreshold = "256 KiB"
        fileSizeThreshold = "256 KiB"

        # Implementation of the error handler to use
        errorHandler = "dev.voidframework.web.http.impl.DefaultErrorHandler"

        # The locations of the routing configuration classes (including class name)
        # Allow manual route declaration. Use it with caution!
        #routes += ""

        # The locations of the global filter classes (including class name)
        #globalFilters += ""

        # The default location of static files
        baseAssetResourcesDirectory = "static"

        # Language
        language {

            # Available languages
            availableLanguages = ["en", "fr"]

            # Name of the cookie containing the current language
            cookieName = "VOID_LANG"

            # Is the cookie only be accessed via HTTP?
            cookieHttpOnly = false

            # Is the cookie secured? If true, sent only for HTTPS requests
            cookieSecure = false
        }

        # Flash messages
        flashMessages {

            # Name of the cookie containing the current session
            cookieName = "VOID_FLASH"

            # Is the cookie only be accessed via HTTP?
            cookieHttpOnly = true

            # Is the cookie secured? If true, sent only for HTTPS requests
            cookieSecure = false
        }

        # Session
        session {

            # Name of the cookie containing the current session
            cookieName = "VOID_SESS"

            # Is the cookie only be accessed via HTTP?
            cookieHttpOnly = true

            # Is the cookie secured? If true, sent only for HTTPS requests
            cookieSecure = false

            # Crypto key is used to secure the session content
            cryptoKey = "sDbHiQvZqAVQlv5J5hyAGFTqg1YvPVQP91g8yNSm6uu7yD6nALtHMHdFFM5nkdF2"

            # Defines the session TTL. According to the documentation, the
            # following units can be used :
            #  - s, seconds
            #  - m, minutes
            #  - h, hours
            #  - d, days
            #
            # ie: timeToLive = "7 days"
            timeToLive = "7 days"
        }

        # Server configuration
        server {

            # The interface on which the server will listen
            listenHost = "127.0.0.1"

            # The port on which the server will listen
            listenPort = 9000

            # Defines the number of I/O threads. If not specified (value = 0 or null), the
            # following default value will be used:
            # ioThreadsNumber = Math.max(Runtime.getRuntime().availableProcessors(), 2)
            ioThreads = null

            # Defines the number of Worker threads. If not specified (value = 0 or null), the
            # following default value will be used:
            # workerThreadsNumber = ioThreadsNumber * 8
            workerThreads = null
        }
    }
}
